<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="
       http://mybatis.org/schema/mybatis-spring
       http://mybatis.org/schema/mybatis-spring.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--配置spring的基础包扫描，只处理与业务相关的请求，控制层交给springMVC去处理-->
    <context:component-scan base-package="com.eip">
        <!--排除基础包中加了Controller注解的类-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--引入外部properties配置文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <!--配置数据源-->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
    </bean>

    <!--配置事务管理器-->
    <!--  @transactional  -->
    <bean id="dataSourceTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--开启基于注解的事务-->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

    <!--切面自动产生代理-->
    <aop:aspectj-autoproxy/>

    <!--整合mybatis：主要目的：管理mapper接口的实现类，实现自动注入-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--指定mybatis配置文件位置-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!--指定mapper映射文件位置-->
        <property name="mapperLocations" value="classpath:com/eip/dao/*.xml"/>
        <!--给com.cy.demo.pojo包中javabean起别名-->
        <property name="typeAliasesPackage" value="com.eip.pojo"/>
    </bean>
    <!--扫描所有的mapper接口，产生代理-->
    <mybatis-spring:scan base-package="com.eip.dao"/>

</beans>











